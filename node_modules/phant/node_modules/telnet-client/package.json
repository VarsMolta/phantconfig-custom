{
  "name": "telnet-client",
  "description": "Simple node.js telnet client",
  "author": {
    "name": "Mario Kozjak",
    "email": "kozjakm1@gmail.com"
  },
  "version": "0.0.6",
  "main": "./lib/telnet-client.js",
  "engine": "node >= 0.10.23",
  "license": {
    "type": "MIT"
  },
  "devDependencies": {
    "nodeunit": ">= 0.9.0"
  },
  "scripts": {
    "test": "nodeunit test"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/mkozjak/node-telnet-client.git"
  },
  "contributors": [
    {
      "name": "Petar Koretic",
      "email": "petar.koretic@sartura.hr"
    }
  ],
  "readme": "# node-telnet-client\n\nA simple telnet client for node.js\n\n## Installation\n\nLocally in your project or globally:\n\n    npm install telnet-client\n    npm install -g telnet-client\n\n## Example usage\n\n    var telnet = require('telnet-client');\n    var connection = new telnet();\n    \n    var params = {\n      host: 127.0.0.1,\n      port: 23,\n      shellPrompt: '/ # ',\n      timeout: 1500,\n      // removeEcho: 4\n    };\n    \n    connection.on('ready', function(prompt) {\n      connection.exec(cmd, function(response) {\n        console.log(response);\n      });\n    });\n    \n    connection.on('timeout', function() {\n      console.log('socket timeout!')\n      connection.end();\n    });\n    \n    connection.on('close', function() {\n      console.log('connection closed');\n    });\n    \n    connection.connect(params);\n\n## API\n\n    var telnet = require('telnet-client');\n    var connection = new telnet();\n\n### connection.connect(options)\n\nCreates a new TCP connection to the specified host, where 'options' is an object\nwhich can include following properties:\n\n* host: Host the client should connect to. Defaults to 'localhost'.\n* port: Port the client should connect to. Defaults to '23'.\n* timeout: Sets the socket to timeout after the specified number of milliseconds\nof inactivity on the socket.\n* shellPrompt: Shell prompt that the host is using. Defaults to regex '/(?:\\/ )?#\\s/'.\n* loginPrompt: Username/login prompt that the host is using. Defaults to regex '/login[: ]*$/i'.\n* username: Username used to login. Defaults to 'root'.\n* irs: Input record separator. A separator used to distinguish between lines of the response. Defaults to '\\r\\n'.\n* ors: Output record separator. A separator used to execute commands (break lines on input). Defaults to '\\n'.\n* echoLines: The number of lines used to cut off the response. Defaults to 1.\n\n### connection.exec(data, [callback])\n\nSends data on the socket (should be a compatible remote host's command if sane information is wanted).\nThe optional callback parameter will be executed when the data is finally written out - this may not be immediately.\nCommand result will be passed as the first argument to the callback.\n\n### connection.end()\n\nHalf-closes the socket. i.e., it sends a FIN packet. It is possible the server will still send some data.\n\n### connection.destroy()\n\nEnsures that no more I/O activity happens on this socket. Only necessary in case of errors (parse error or so).\n\n### Event: 'connect'\n\nEmitted when a socket connection is successfully established.\n\n### Event: 'ready'\n\nEmitted when a socket connection is successfully established and the client is successfully connected to the specified remote host.\nA value of prompt is passed as the first argument to the callback.\n\n### Event: 'writedone'\n\nEmitted when the write of given data is sent to the socket.\n\n### Event: 'timeout'\n\nEmitted if the socket times out from inactivity. This is only to notify that the socket has been idle.\nThe user must manually close the connection.\n\n### Event: 'error'\n\nEmitted when an error occurs. The 'close' event will be called directly following this event.\n\n### Event: 'end'\n\nEmitted when the other end of the socket (remote host) sends a FIN packet.\n\n### Event: 'close'\n\nEmitted once the socket is fully closed.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mkozjak/node-telnet-client/issues"
  },
  "homepage": "https://github.com/mkozjak/node-telnet-client",
  "_id": "telnet-client@0.0.6",
  "_from": "telnet-client@0.0.6"
}
